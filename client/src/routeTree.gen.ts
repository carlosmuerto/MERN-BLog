/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const SignUpLazyImport = createFileRoute('/signUp')()
const SignInLazyImport = createFileRoute('/signIn')()
const ProjectsLazyImport = createFileRoute('/projects')()
const AboutLazyImport = createFileRoute('/about')()
const DashboardProfileLazyImport = createFileRoute('/dashboard/profile')()

// Create/Update Routes

const SignUpLazyRoute = SignUpLazyImport.update({
  id: '/signUp',
  path: '/signUp',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signUp.lazy').then((d) => d.Route))

const SignInLazyRoute = SignInLazyImport.update({
  id: '/signIn',
  path: '/signIn',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signIn.lazy').then((d) => d.Route))

const ProjectsLazyRoute = ProjectsLazyImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/projects.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardProfileLazyRoute = DashboardProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardRoute,
} as any).lazy(() =>
  import('./routes/dashboard/profile.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsLazyImport
      parentRoute: typeof rootRoute
    }
    '/signIn': {
      id: '/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof SignInLazyImport
      parentRoute: typeof rootRoute
    }
    '/signUp': {
      id: '/signUp'
      path: '/signUp'
      fullPath: '/signUp'
      preLoaderRoute: typeof SignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/profile': {
      id: '/dashboard/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileLazyImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardProfileLazyRoute: typeof DashboardProfileLazyRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardProfileLazyRoute: DashboardProfileLazyRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/signIn': typeof SignInLazyRoute
  '/signUp': typeof SignUpLazyRoute
  '/dashboard/profile': typeof DashboardProfileLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/signIn': typeof SignInLazyRoute
  '/signUp': typeof SignUpLazyRoute
  '/dashboard/profile': typeof DashboardProfileLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/about': typeof AboutLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/signIn': typeof SignInLazyRoute
  '/signUp': typeof SignUpLazyRoute
  '/dashboard/profile': typeof DashboardProfileLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/about'
    | '/projects'
    | '/signIn'
    | '/signUp'
    | '/dashboard/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/about'
    | '/projects'
    | '/signIn'
    | '/signUp'
    | '/dashboard/profile'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/about'
    | '/projects'
    | '/signIn'
    | '/signUp'
    | '/dashboard/profile'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  AboutLazyRoute: typeof AboutLazyRoute
  ProjectsLazyRoute: typeof ProjectsLazyRoute
  SignInLazyRoute: typeof SignInLazyRoute
  SignUpLazyRoute: typeof SignUpLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  AboutLazyRoute: AboutLazyRoute,
  ProjectsLazyRoute: ProjectsLazyRoute,
  SignInLazyRoute: SignInLazyRoute,
  SignUpLazyRoute: SignUpLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/about",
        "/projects",
        "/signIn",
        "/signUp"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx",
      "children": [
        "/dashboard/profile"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/projects": {
      "filePath": "projects.lazy.tsx"
    },
    "/signIn": {
      "filePath": "signIn.lazy.tsx"
    },
    "/signUp": {
      "filePath": "signUp.lazy.tsx"
    },
    "/dashboard/profile": {
      "filePath": "dashboard/profile.lazy.tsx",
      "parent": "/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
