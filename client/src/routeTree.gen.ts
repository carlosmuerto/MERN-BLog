/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const SignOutLazyImport = createFileRoute('/signOut')()
const SignInLazyImport = createFileRoute('/signIn')()
const ProjectsLazyImport = createFileRoute('/projects')()
const DashboardLazyImport = createFileRoute('/dashboard')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SignOutLazyRoute = SignOutLazyImport.update({
  id: '/signOut',
  path: '/signOut',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signOut.lazy').then((d) => d.Route))

const SignInLazyRoute = SignInLazyImport.update({
  id: '/signIn',
  path: '/signIn',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signIn.lazy').then((d) => d.Route))

const ProjectsLazyRoute = ProjectsLazyImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/projects.lazy').then((d) => d.Route))

const DashboardLazyRoute = DashboardLazyImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dashboard.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsLazyImport
      parentRoute: typeof rootRoute
    }
    '/signIn': {
      id: '/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof SignInLazyImport
      parentRoute: typeof rootRoute
    }
    '/signOut': {
      id: '/signOut'
      path: '/signOut'
      fullPath: '/signOut'
      preLoaderRoute: typeof SignOutLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/signIn': typeof SignInLazyRoute
  '/signOut': typeof SignOutLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/signIn': typeof SignInLazyRoute
  '/signOut': typeof SignOutLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/dashboard': typeof DashboardLazyRoute
  '/projects': typeof ProjectsLazyRoute
  '/signIn': typeof SignInLazyRoute
  '/signOut': typeof SignOutLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/dashboard'
    | '/projects'
    | '/signIn'
    | '/signOut'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/dashboard' | '/projects' | '/signIn' | '/signOut'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/dashboard'
    | '/projects'
    | '/signIn'
    | '/signOut'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  DashboardLazyRoute: typeof DashboardLazyRoute
  ProjectsLazyRoute: typeof ProjectsLazyRoute
  SignInLazyRoute: typeof SignInLazyRoute
  SignOutLazyRoute: typeof SignOutLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  DashboardLazyRoute: DashboardLazyRoute,
  ProjectsLazyRoute: ProjectsLazyRoute,
  SignInLazyRoute: SignInLazyRoute,
  SignOutLazyRoute: SignOutLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/dashboard",
        "/projects",
        "/signIn",
        "/signOut"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.lazy.tsx"
    },
    "/projects": {
      "filePath": "projects.lazy.tsx"
    },
    "/signIn": {
      "filePath": "signIn.lazy.tsx"
    },
    "/signOut": {
      "filePath": "signOut.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
